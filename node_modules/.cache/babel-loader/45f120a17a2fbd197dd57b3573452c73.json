{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Huan Bui\\\\Desktop\\\\amazon-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Huan Bui\\\\Desktop\\\\amazon-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n// For data layer\nexport var initialState = {\n  basket: []\n}; // Selector\n\nexport var getBasketTotal = function getBasketTotal(basket) {\n  return basket.reduce(function (amount, item) {\n    return item.price + amount;\n  }, 0);\n}; // reducer for pushing the data to data layer\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return _objectSpread({}, state, {\n        basket: [].concat(_toConsumableArray(state.basket), [action.item])\n      });\n\n    case 'REMOVE_FROM_BASKET':\n      return _objectSpread({}, state, {\n        basket: state.basket.filter(item)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Huan Bui/Desktop/amazon-clone/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","filter"],"mappings":";;AAAA;AACA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAG;AADe,CAArB,C,CAIP;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACD,MAAD;AAAA,SAC1BA,MAAM,CAACE,MAAP,CAAc,UAACC,MAAD,EAASC,IAAT;AAAA,WAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA/B;AAAA,GAAd,EAAqD,CAArD,CAD0B;AAAA,CAAvB,C,CAGP;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,+BACOF,KADP;AAEIP,QAAAA,MAAM,+BAAMO,KAAK,CAACP,MAAZ,IAAoBQ,MAAM,CAACJ,IAA3B;AAFV;;AAIJ,SAAK,oBAAL;AACI,+BACOG,KADP;AAEIP,QAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAaU,MAAb,CAAoBN,IAApB;AAFZ;;AAIJ;AACI,aAAOG,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["// For data layer\r\nexport const initialState = {\r\n    basket : [],\r\n}\r\n\r\n// Selector\r\nexport const getBasketTotal = (basket) => \r\n    basket.reduce((amount, item) => item.price + amount, 0);\r\n\r\n// reducer for pushing the data to data layer\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TO_BASKET': \r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            };\r\n        case 'REMOVE_FROM_BASKET':\r\n            return {\r\n                ...state,\r\n                basket: state.basket.filter(item)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}