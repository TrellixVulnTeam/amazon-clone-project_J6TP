{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huan Bui\\\\Desktop\\\\amazon-clone\\\\src\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./Payment.css\";\nimport { useStateValue } from './StateProvider';\nimport CheckoutProduct from './CheckoutProduct';\nimport { Link } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState;\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // do stripe\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe;\n  };\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React Ct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"o\", {\n            children: \"Charlotte, NC, 69669\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: \"handleSubmit\",\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment_priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disable: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 53\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"lO3OE730idFR3LiCz4WJC7wD/RY=\", false, function () {\n  return [useStateValue, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/Huan Bui/Desktop/amazon-clone/src/Payment.js"],"names":["React","useState","useStateValue","CheckoutProduct","Link","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","Payment","basket","user","dispatch","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","handleSubmit","event","preventDefault","payload","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Payment.css\"\r\nimport { useStateValue } from './StateProvider';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport {Link} from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal} from \"./reducer\";\r\n\r\nfunction Payment() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    \r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n\r\n\r\n    const handleSubmit = async event => {\r\n        // do stripe\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n        \r\n        const payload = await stripe\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment_container\">\r\n                <h1>\r\n                    Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n                </h1>\r\n                {/* Delivery address */}\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Ct</p>\r\n                        <o>Charlotte, NC, 69669</o>\r\n                    </div>\r\n                </div>\r\n                {/* Review items */}\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment_items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment method */}\r\n                <div className=\"payment_section\">\r\n                    <div className='payment_title'>\r\n                        <h3>Payment method</h3>\r\n                    </div>                    \r\n                    <div className=\"payment_details\">\r\n                        {/* implement stripe */}\r\n                        \r\n                        <form onSubmit=\"handleSubmit\">\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment_priceContainer\">\r\n                            <CurrencyFormat\r\n                                 renderText={(value) => (\r\n                                    <h3>Order Total: {value}</h3>\r\n                                )}\r\n                                decimalScale={2}\r\n                                value={getBasketTotal(basket)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                            />                               \r\n                            <button disable={processing || disabled || succeeded}>\r\n                                <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                            </button>\r\n                            </div>\r\n\r\n                            {/* Errors */}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}