{"ast":null,"code":"// For data layer\nexport const initialState = {\n  basket: []\n}; // Selector\n\nexport const getBasketTotal = basket => basket.reduce((amount, item) => item.price + amount, 0); // reducer for pushing the data to data layer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.title === action.title);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Can't remove product \");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case 'SET_USER':\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Huan Bui/Desktop/amazon-clone/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","basketItem","title","newBasket","splice","console","warn","user"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAG;AADe,CAArB,C,CAIP;;AACA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC1BA,MAAM,CAACE,MAAP,CAAc,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA7C,EAAqD,CAArD,CADG,C,CAGP;;AACA,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAIJ,SAAK,oBAAL;AACI,YAAMM,KAAK,GAAGH,KAAK,CAACP,MAAN,CAAaW,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,KAAX,KAAqBL,MAAM,CAACK,KADlC,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACP,MAAV,CAAhB;;AAEA,UAAIU,KAAK,IAAI,CAAb,EAAgB;AACZI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AAEH,OAHD,MAGM;AACFM,QAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACH;;AACD,aAAO,EACH,GAAGV,KADA;AAEHP,QAAAA,MAAM,EAAEc;AAFL,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAM,EACF,GAAGP,KADD;AAEFW,QAAAA,IAAI,EAAEV,MAAM,CAACU;AAFX,OAAN;;AAIJ;AACI,aAAOX,KAAP;AA5BR;AA8BH,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["// For data layer\r\nexport const initialState = {\r\n    basket : [],\r\n}\r\n\r\n// Selector\r\nexport const getBasketTotal = (basket) => \r\n    basket.reduce((amount, item) => item.price + amount, 0);\r\n\r\n// reducer for pushing the data to data layer\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TO_BASKET': \r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            };\r\n        case 'REMOVE_FROM_BASKET':\r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.title === action.title);\r\n\r\n            let newBasket = [...state.basket];\r\n\r\n            if (index >= 0) {\r\n                newBasket.splice(index, 1);\r\n\r\n            } else{\r\n                console.warn(\"Can't remove product \");\r\n            }\r\n            return {\r\n                ...state,\r\n                basket: newBasket\r\n            }\r\n        case 'SET_USER':\r\n            return{\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}